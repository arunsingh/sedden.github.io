<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Stefan Jenkner]]></title>
  <link href="http://jenkner.org/atom.xml" rel="self"/>
  <link href="http://jenkner.org/"/>
  <updated>2013-03-26T19:55:36+01:00</updated>
  <id>http://jenkner.org/</id>
  <author>
    <name><![CDATA[Stefan Jenkner]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pros and cons using Puppet's $::osfamily instead of $::operatingsystem Fact]]></title>
    <link href="http://jenkner.org/blog/2013/03/27/use-osfamily-instead-of-operatingsystem/"/>
    <updated>2013-03-27T11:36:00+01:00</updated>
    <id>http://jenkner.org/blog/2013/03/27/use-osfamily-instead-of-operatingsystem</id>
    <content type="html"><![CDATA[<p>Once you read the <a href="http://docs.puppetlabs.com/guides/style_guide.html">Puppet Style Guide</a>, you should know how to writing well structured manifests, with the modest indentation, spacing, arrow alignment, quoting and so on.
Well, I think there are lots of other things you <del>better</del> should care.
For this time, it&#8217;s about when to use <code>$::osfamily</code> and when better to stay with the <code>$::operatingsystem</code> fact.</p>

<h4>Pros</h4>

<p>The key benefit of using <code>$::osfamily</code> is that you don&#8217;t end up forking your favorite Puppet module on GitHub to add the eleventh RedHat derivate:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='puppet'><span class='line'><span class="k">case</span> <span class="nv">$::operatingsystem</span> <span class="p">{</span>
</span><span class='line'>   <span class="s">&#39;RedHat&#39;</span><span class="p">,</span> <span class="s">&#39;CentOS&#39;</span><span class="p">,</span> <span class="s">&#39;Scientific&#39;</span><span class="p">,</span> <span class="err">.</span> <span class="err">.</span> <span class="err">.</span> <span class="p">,</span> <span class="s">&#39;OracleLinux&#39;</span><span class="p">,</span> <span class="s">&#39;OEL&#39;</span><span class="p">:</span> <span class="p">{</span><span class="c"></span>
</span><span class='line'><span class="c">     # do something RHEL specific</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="s">&#39;ubuntu&#39;</span><span class="p">,</span> <span class="s">&#39;debian&#39;</span><span class="p">:</span> <span class="p">{</span><span class="c"></span>
</span><span class='line'><span class="c">     # do something Debian specific </span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="k">default</span><span class="p">:</span> <span class="p">{</span><span class="c"></span>
</span><span class='line'><span class="c">     # ...</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Instead you would use:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='puppet'><span class='line'><span class="k">case</span> <span class="nv">$::osfamily</span> <span class="p">{</span>
</span><span class='line'>   <span class="s">&#39;redhat&#39;</span><span class="p">:</span> <span class="p">{</span><span class="c"></span>
</span><span class='line'><span class="c">     # do something RHEL specific</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="s">&#39;debian&#39;</span><span class="p">:</span> <span class="p">{</span><span class="c"></span>
</span><span class='line'><span class="c">     # do something Debian specific </span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>   <span class="k">default</span><span class="p">:</span> <span class="p">{</span><span class="c"></span>
</span><span class='line'><span class="c">     # ...</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It allows you to write cleaner manifests and works well for common tasks.
You still have the choice to handle details via <code>$::operatingsystem</code> the more complex your classes become.</p>

<h4>Cons</h4>

<p>There are disadvantages of course: You claim tosupport an Operating-System you might haven&#8217;t even heard of.
But my experience is that most people are using the EPEL repositories anyway. So wouldn&#8217;t it be enough to test your modules against EPEL? And yes: you really should test your manifests!</p>

<h4>Support for Facter &lt; 1.6.1</h4>

<p>The <code>$::osfamily</code> fact was introduced with Facter 1.6.1. There is a simple workaround for older versions. I found this solution in the description of the <a href="https://github.com/puppetlabs/puppetlabs-mysql/">puppetlabs-mysql Module</a>. Just put this into your <code>site.pp</code> (before any node definition):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='puppet'><span class='line'><span class="k">if</span> <span class="o">!</span> <span class="nv">$::osfamily</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">case</span> <span class="nv">$::operatingsystem</span> <span class="p">{</span>
</span><span class='line'>    <span class="s">&#39;RedHat&#39;</span><span class="p">,</span> <span class="s">&#39;Fedora&#39;</span><span class="p">,</span> <span class="s">&#39;CentOS&#39;</span><span class="p">,</span> <span class="s">&#39;Scientific&#39;</span><span class="p">,</span> <span class="s">&#39;SLC&#39;</span><span class="p">,</span> <span class="s">&#39;Ascendos&#39;</span><span class="p">,</span> <span class="s">&#39;CloudLinux&#39;</span><span class="p">,</span> <span class="s">&#39;PSBM&#39;</span><span class="p">,</span> <span class="s">&#39;OracleLinux&#39;</span><span class="p">,</span> <span class="s">&#39;OVS&#39;</span><span class="p">,</span> <span class="s">&#39;OEL&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$osfamily</span> <span class="o">=</span> <span class="s">&#39;RedHat&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="s">&#39;ubuntu&#39;</span><span class="p">,</span> <span class="s">&#39;debian&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$osfamily</span> <span class="o">=</span> <span class="s">&#39;Debian&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="s">&#39;SLES&#39;</span><span class="p">,</span> <span class="s">&#39;SLED&#39;</span><span class="p">,</span> <span class="s">&#39;OpenSuSE&#39;</span><span class="p">,</span> <span class="s">&#39;SuSE&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$osfamily</span> <span class="o">=</span> <span class="s">&#39;Suse&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="s">&#39;Solaris&#39;</span><span class="p">,</span> <span class="s">&#39;Nexenta&#39;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$osfamily</span> <span class="o">=</span> <span class="s">&#39;Solaris&#39;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">default</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nv">$osfamily</span> <span class="o">=</span> <span class="nv">$::operatingsystem</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It defines <code>$::osfamily</code> if not available.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Forwarding IPv6 Traffic from WAN to LAN with OpenWRT]]></title>
    <link href="http://jenkner.org/blog/2013/03/26/openwrt-ipv6-forwarding/"/>
    <updated>2013-03-26T09:58:00+01:00</updated>
    <id>http://jenkner.org/blog/2013/03/26/openwrt-ipv6-forwarding</id>
    <content type="html"><![CDATA[<p>We&#8217;re starting from the premise that you already enabled IPv6. If not so, this will help you to switch it on:</p>

<ul>
<li><a href="http://www.sixxs.net/wiki/Aiccu/Installing_on_OpenWRT">Aiccu/Installing on OpenWRT</a></li>
<li><a href="http://wiki.openwrt.org/doc/howto/ipv6">IPv6 HowTo on Backfire and later</a></li>
</ul>


<p>OpenWRT Attitude Adjustment 2012.09 warning: There is an ongoing discussion regarding the AICCU init script. If you can, stay with OpenWRT Backfire 2010.3.</p>

<p>I&#8217;m using SixxS tunnels to enable IPv6. My <code>/etc/config/network</code> looks like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config interface 'lan'
</span><span class='line'>  # ...
</span><span class='line'>  option ip6addr '2001:my:subnet:prefix::1/64'
</span><span class='line'>
</span><span class='line'>config 'interface' 'wan6'
</span><span class='line'>  # ...
</span><span class='line'>  option 'ip6addr' '2001:my:end:point::2'</span></code></pre></td></tr></table></div></figure>


<p>To enable that your local server is reachable via SSH (port 22) add this rule to <code>/etc/config/firewall</code> straight after the standard IPv6 rules:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>config rule
</span><span class='line'>       option 'src' 'wan6'
</span><span class='line'>       option 'proto' 'tcp'
</span><span class='line'>       option 'dest_port' '22'
</span><span class='line'>       option 'dest_ip' '2001:your:servers:global:ipv6:address:####:####'
</span><span class='line'>       option 'family' 'ipv6'
</span><span class='line'>       option 'target' 'ACCEPT'
</span><span class='line'>       option 'dest' 'lan' </span></code></pre></td></tr></table></div></figure>


<p>Also make sure that you installed the <code>ip6tables</code> Package,
then restart the firewall with <code>/etc/init.d/firewall restart</code>
and test your setup.</p>
]]></content>
  </entry>
  
</feed>
